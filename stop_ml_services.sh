#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö ML-—Å–µ—Ä–≤–∏—Å–æ–≤

set -e

echo "üõë Stopping Local ML Services for Knowledge Base RAG MVP"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ PID —Ñ–∞–π–ª—É
stop_service() {
    local service_name=$1
    local pid_file="${service_name,,}_service.pid"
    local port=$2
    
    echo -e "${BLUE}üîÑ Stopping $service_name...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ PID —Ñ–∞–π–ª–∞
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –µ—â–µ –∑–∞–ø—É—â–µ–Ω
        if ps -p $pid > /dev/null 2>&1; then
            echo -e "${YELLOW}üìã Found $service_name process (PID: $pid)${NC}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º SIGTERM
            kill $pid
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
            local count=0
            while ps -p $pid > /dev/null 2>&1 && [ $count -lt 10 ]; do
                sleep 1
                count=$((count + 1))
                echo -e "${YELLOW}‚è≥ Waiting for $service_name to stop... ($count/10)${NC}"
            done
            
            # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º
            if ps -p $pid > /dev/null 2>&1; then
                echo -e "${YELLOW}‚ö†Ô∏è  Force killing $service_name process${NC}"
                kill -9 $pid
                sleep 1
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if ! ps -p $pid > /dev/null 2>&1; then
                echo -e "${GREEN}‚úÖ $service_name stopped successfully${NC}"
                rm -f "$pid_file"
            else
                echo -e "${RED}‚ùå Failed to stop $service_name${NC}"
            fi
        else
            echo -e "${YELLOW}‚ö†Ô∏è  $service_name process not found (PID: $pid)${NC}"
            rm -f "$pid_file"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  No PID file found for $service_name${NC}"
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –ø–æ—Ä—Ç—É
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  Port $port is still in use, trying to kill process...${NC}"
        local port_pid=$(lsof -Pi :$port -sTCP:LISTEN -t)
        if [ ! -z "$port_pid" ]; then
            kill $port_pid 2>/dev/null || kill -9 $port_pid 2>/dev/null
            sleep 1
            
            if ! lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
                echo -e "${GREEN}‚úÖ Port $port freed${NC}"
            else
                echo -e "${RED}‚ùå Port $port is still in use${NC}"
            fi
        fi
    else
        echo -e "${GREEN}‚úÖ Port $port is free${NC}"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
EMBEDDING_PORT=8003
RERANKER_PORT=8002

stop_service "Embedding" $EMBEDDING_PORT
stop_service "Reranker" $RERANKER_PORT

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo -e "${BLUE}üßπ Cleaning up...${NC}"

if [ -f "embedding_service.log" ]; then
    echo -e "${YELLOW}üìã Embedding service log size: $(du -h embedding_service.log | cut -f1)${NC}"
    echo -e "${BLUE}üí° To view logs: cat embedding_service.log${NC}"
fi

if [ -f "reranker_service.log" ]; then
    echo -e "${YELLOW}üìã Reranker service log size: $(du -h reranker_service.log | cut -f1)${NC}"
    echo -e "${BLUE}üí° To view logs: cat reranker_service.log${NC}"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo -e "${BLUE}=================================================="
echo -e "üéØ Final Status:"
echo -e "=================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
if ! lsof -Pi :$EMBEDDING_PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Embedding Service (port $EMBEDDING_PORT): Stopped${NC}"
else
    echo -e "${RED}‚ùå Embedding Service (port $EMBEDDING_PORT): Still running${NC}"
fi

if ! lsof -Pi :$RERANKER_PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Reranker Service (port $RERANKER_PORT): Stopped${NC}"
else
    echo -e "${RED}‚ùå Reranker Service (port $RERANKER_PORT): Still running${NC}"
fi

echo -e "${BLUE}=================================================="
echo -e "${GREEN}üéâ ML Services shutdown completed!${NC}"
echo -e "${BLUE}üí° To start services again, run: ./start_ml_services.sh${NC}"
echo -e "${BLUE}=================================================="
